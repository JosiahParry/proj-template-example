#create_package()
use_mit_license()
library(usethis)
#create_package()
use_mit_license()
?use_mit_license
#create_package()
use_mit_license("Pkg Creator")
use_readme_rmd()
use_data_raw()
use_news_md()
# - R functions `R/`
use_r("gs4_skeleton")
template_dir <- "inst/rstudio/templates/project/resources"
dir.create(template_dir)
?dir.create
dir.create(template_dir, recursive = TRUE)
dir.create(file.path(template_dir, ".secrets"))
file.create(file.path(template_dir, ".Rprofile"))
file.create(file.path(template_dir, ".secrets", "super-fancy-secret-secret.key"))
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
template_dir
template_dir('rstudio', 'templates', 'project', 'resources')
devtools::load_all(".")
rm(list = ls())
devtools::load_all(".")
gs4template::template_dir()
devtools::load_all(".")
?devtools::load_all()
gs4template::template_dir()
template_dir('rstudio', 'templates', 'project', 'resources')
template_dir("rstudio", "templates", "project", "resources")
devtools::install()
template_dir
file.create("inst/rstudio/templates/project/gs4_skeleton.dcf")
devtools::install()
devtools::install()
template_dir
gs4template:::template_dir()
gs4template:::gs4_skeleton()
gs4template:::gs4_skeleton("test")
dir.create("test")
gs4template:::gs4_skeleton("test")
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
proj_dir
proj_files <- list.files(proj_dir, recursive = TRUE, include.dirs = FALSE)
proj_files
list.files(proj_dir)
template+dir
proj_dir
dir.exists(proj_dir)
devtools::document()
proj_files
proj_files <- list.files(proj_dir, recursive = TRUE, include.dirs = TRUE)
proj_files
bookdown:::book_skeleton
bookdown:::bookdown_skeleton
devtools::install()
proj_files <- list.files(proj_dir, recursive = TRUE, include.dirs = FALSE)
bookdown:::bookdown_skeleton
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
proj_files <- list.files(proj_dir, recursive = TRUE, include.dirs = FALSE)
proj_files
list.files(proj_dir)
devtools::load_all()
devtools::install()
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
# create the directory
dir.create(path, recursive = TRUE, showWarnings = FALSE)
# identify the directory with the template
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir, recursive = TRUE, include.dirs = FALSE)
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir, recursive = TRUE, include.dirs = FALSE)
list.files("proj_dir")
list.files("inst")
list.files("inst/rstudio")
list.files("inst/rstudio/templates/project")
list.files("inst/rstudio/templates/project/resources")
?list.files("inst/rstudio/templates/project/resources")
list.files("inst/rstudio/templates/project/resources", no..  = F)
list.files("inst/rstudio/templates/project/resources", all.files = T)
list.files("inst/rstudio/templates/project/resources", all.files = T, no.. = T)
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
# create the directory
dir.create(path, recursive = TRUE, showWarnings = FALSE)
# identify the directory with the template
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
devtools::install()
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
?file.copy
devtools::install()
gs4template:::gs4_skeleton("~/Github/sdf")
?file.copy
gs4template:::gs4_skeleton("~/Github/sdf")
n
gs4_skeleton <- function(path, ...) {
# create the directory
dir.create(path, recursive = TRUE, showWarnings = FALSE)
# identify the directory with the template
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
# create full file path of template files
proj_file_paths <- file.path(proj_dir, proj_files)
# use the project path to create new file locations
new_proj_path <- file.path(path, proj_files)
print(proj_file_paths)
# copy the files over
file.copy(proj_file_paths[1], new_proj_path[1], recursive = TRUE)
}
gs4template:::gs4_skeleton("~/Github/sdf")
gs4_skeleton("~/Github/sdf")
proj_dir
gs4_skeleton <- function(path, ...) {
# create the directory
dir.create(path, recursive = TRUE, showWarnings = FALSE)
# identify the directory with the template
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
# create full file path of template files
proj_file_paths <- file.path(proj_dir, proj_files)
# use the project path to create new file locations
new_proj_path <- file.path(path, proj_files)
print(proj_file_paths)
# Create .secrets directory
dir.create(file.path(path, ".secrets"))
# copy the files over
file.copy(proj_file_paths[1], new_proj_path[1], recursive = TRUE)
}
gs4_skeleton("~/Github/sdf")
gs4_skeleton("~/Github/sdf")
gs4_skeleton <- function(path, ...) {
# create the directory
dir.create(path, recursive = TRUE, showWarnings = FALSE)
# identify the directory with the template
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
# create full file path of template files
proj_file_paths <- file.path(proj_dir, proj_files)
# use the project path to create new file locations
new_proj_path <- file.path(path, proj_files)
print(proj_file_paths)
# Create .secrets directory
dir.create(file.path(path, ".secrets"), recursive = TRUE)
# copy the files over
file.copy(proj_file_paths[1], new_proj_path[1])
}
gs4_skeleton("~/Github/sdf")
gs4_skeleton <- function(path, ...) {
# create the directory
dir.create(path, recursive = TRUE, showWarnings = FALSE)
# identify the directory with the template
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
# create full file path of template files
proj_file_paths <- file.path(proj_dir, proj_files)
# use the project path to create new file locations
new_proj_path <- file.path(path, proj_files)
print(proj_file_paths)
print(new_proj_path)
# Create .secrets directory
dir.create(file.path(path, ".secrets"), recursive = TRUE)
# copy the files over
file.copy(proj_file_paths[1], new_proj_path[1])
}
gs4_skeleton("~/Github/sdf")
gs4_skeleton <- function(path, ...) {
# create the directory
dir.create(path, recursive = TRUE, showWarnings = FALSE)
# identify the directory with the template
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
# create full file path of template files
proj_file_paths <- file.path(proj_dir, proj_files)
# use the project path to create new file locations
new_proj_path <- file.path(path, proj_files)
print(proj_file_paths)
print(new_proj_path)
print(proj_files)
# Create .secrets directory
dir.create(file.path(path, ".secrets"), recursive = TRUE)
# copy the files over
file.copy(proj_file_paths[1], new_proj_path[1])
}
gs4_skeleton("~/Github/sdf")
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
proj_files
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE)
proj_files
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = F)
proj_files
proj_dir
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
# identify the directory with the template
(proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources'))
# list all of the files
( proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = F))
devtools::load_all(".")
gs4template::template_dir()
list.files(gs4template::template_dir())
list.files(gs4template::template_dir(), recursive = T)
list.files(gs4template::template_dir(), recursive = T, all.files = TRUE)
devtools::load_all(".")
list.files(gs4template::template_dir(), recursive = T, all.files = TRUE)
gs4template::gs4_skeleton("~/Github/sdf")
devtools::load_all(".")
gs4template::gs4_skeleton("~/Github/sdf")
devtools::load_all(".")
gs4template::gs4_skeleton("~/Github/sdf")
devtools::install()
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
#proj_dir <- template_dir()
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
proj_dir <- gs4template::template_dir('rstudio', 'templates', 'project', 'resources')
proj_dir <- gs4template::"template_dir('rstudio', 'templates', 'project', 'resources')
#proj_dir <- template_dir()
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
proj_dir <- gs4template:::template_dir('rstudio', 'templates', 'project', 'resources')
proj_dir <- gs4template:::template_dir('rstudio', 'templates', 'project', 'resources')
proj_dir
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
proj_files
list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
list.files(proj_dir,
recursive = TRUE, include.dirs = T,
all.files = TRUE,
no.. = TRUE)
list.files(proj_dir,
recursive = TRUE,
include.dirs = T,
all.files = TRUE),
#no.. = TRUE)
proj_files
list.files(proj_dir,
recursive = TRUE,
include.dirs = T,
all.files = TRUE,
no.. = TRUE)
list.files(proj_dir,
recursive = TRUE,
include.dirs = T,
all.files = TRUE,
no.. = FALSE)
proj_dir
devtools::load_all(".")
devtools::load_all(".")
gs4_skeleton("~/Github/as")
devtools::install()
devtools::load_all(".")
devtools::install()
gsub(".Rprofile", "Rprofile")
?gsub(".Rprofile", "Rprofile")
gsub("Rprofile", ".Rprofile")
gsub("Rprofile", ".Rprofile", ".Rprofile")
gsub(".Rprofile", "Rprofile", ".Rprofile")
gsub("Rprofile", ".Rprofile", "Rprofile")
gsub("Rprofile", ".Rprofile", c("Rprofile", "otherfiles"))
?file.rename
devtools::load_all(".")
devtools::install()
template_dir <- function(...) {
system.file(..., package = "gs4template")
}
proj_dir <- template_dir('rstudio', 'templates', 'project', 'resources')
# list all of the files
proj_files <- list.files(proj_dir,
recursive = TRUE, include.dirs = FALSE,
all.files = TRUE,
no.. = TRUE)
proj_files
# create full file path of template files
proj_file_paths <- file.path(proj_dir, proj_files)
# use the project path to create new file locations
new_proj_path <- file.path(path, proj_files)
gs4template:::gs4_skeleton("~/Github/d")
gs4template:::gs4_skeleton("~/Github/d")
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
